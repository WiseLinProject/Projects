//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18047
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Oleit.AS.Service.LogicService.MenuAccessReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MenuAccessReference.IMenuAccess")]
    public interface IMenuAccess {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuAccess/Insert", ReplyAction="http://tempuri.org/IMenuAccess/InsertResponse")]
        void Insert(Oleit.AS.Service.DataObject.Role role, Oleit.AS.Service.DataObject.FuncMenu menu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuAccess/Query", ReplyAction="http://tempuri.org/IMenuAccess/QueryResponse")]
        Oleit.AS.Service.DataObject.FuncMenu[] Query(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuAccess/QueryRole", ReplyAction="http://tempuri.org/IMenuAccess/QueryRoleResponse")]
        Oleit.AS.Service.DataObject.Role QueryRole(int roleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuAccess/QueryAllMenu", ReplyAction="http://tempuri.org/IMenuAccess/QueryAllMenuResponse")]
        Oleit.AS.Service.DataObject.FuncMenu[] QueryAllMenu();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuAccess/QueryUserMenu", ReplyAction="http://tempuri.org/IMenuAccess/QueryUserMenuResponse")]
        Oleit.AS.Service.DataObject.FuncMenu[] QueryUserMenu(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuAccess/QueryAllRole", ReplyAction="http://tempuri.org/IMenuAccess/QueryAllRoleResponse")]
        Oleit.AS.Service.DataObject.Role[] QueryAllRole();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuAccess/QueryRoleMenuRelation", ReplyAction="http://tempuri.org/IMenuAccess/QueryRoleMenuRelationResponse")]
        System.Data.DataSet QueryRoleMenuRelation();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuAccess/QueryRoleUserRelation", ReplyAction="http://tempuri.org/IMenuAccess/QueryRoleUserRelationResponse")]
        System.Data.DataSet QueryRoleUserRelation();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuAccess/Update", ReplyAction="http://tempuri.org/IMenuAccess/UpdateResponse")]
        void Update(Oleit.AS.Service.DataObject.FuncMenu[] menuCollection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuAccess/DeleteRole", ReplyAction="http://tempuri.org/IMenuAccess/DeleteRoleResponse")]
        void DeleteRole(int roleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuAccess/SetRoles", ReplyAction="http://tempuri.org/IMenuAccess/SetRolesResponse")]
        bool SetRoles(Oleit.AS.Service.DataObject.User user, Oleit.AS.Service.DataObject.Role[] roleCollection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuAccess/QueryRoleUser", ReplyAction="http://tempuri.org/IMenuAccess/QueryRoleUserResponse")]
        Oleit.AS.Service.DataObject.User[] QueryRoleUser(int roleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuAccess/QueryUserRole", ReplyAction="http://tempuri.org/IMenuAccess/QueryUserRoleResponse")]
        Oleit.AS.Service.DataObject.Role[] QueryUserRole(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuAccess/UpdateRole", ReplyAction="http://tempuri.org/IMenuAccess/UpdateRoleResponse")]
        void UpdateRole(Oleit.AS.Service.DataObject.Role role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuAccess/InsertRole", ReplyAction="http://tempuri.org/IMenuAccess/InsertRoleResponse")]
        void InsertRole(string roleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuAccess/InsertRoleMenuRelation", ReplyAction="http://tempuri.org/IMenuAccess/InsertRoleMenuRelationResponse")]
        void InsertRoleMenuRelation(int menuID, int roleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuAccess/DeleteRoleMenuRelation", ReplyAction="http://tempuri.org/IMenuAccess/DeleteRoleMenuRelationResponse")]
        void DeleteRoleMenuRelation(int menuID, int roleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuAccess/InsertRoleUserRelation", ReplyAction="http://tempuri.org/IMenuAccess/InsertRoleUserRelationResponse")]
        void InsertRoleUserRelation(int menuID, int roleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuAccess/DeleteRoleUserRelation", ReplyAction="http://tempuri.org/IMenuAccess/DeleteRoleUserRelationResponse")]
        void DeleteRoleUserRelation(int menuID, int roleID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMenuAccessChannel : Oleit.AS.Service.LogicService.MenuAccessReference.IMenuAccess, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MenuAccessClient : System.ServiceModel.ClientBase<Oleit.AS.Service.LogicService.MenuAccessReference.IMenuAccess>, Oleit.AS.Service.LogicService.MenuAccessReference.IMenuAccess {
        
        public MenuAccessClient() {
        }
        
        public MenuAccessClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MenuAccessClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MenuAccessClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MenuAccessClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Insert(Oleit.AS.Service.DataObject.Role role, Oleit.AS.Service.DataObject.FuncMenu menu) {
            base.Channel.Insert(role, menu);
        }
        
        public Oleit.AS.Service.DataObject.FuncMenu[] Query(int userId) {
            return base.Channel.Query(userId);
        }
        
        public Oleit.AS.Service.DataObject.Role QueryRole(int roleID) {
            return base.Channel.QueryRole(roleID);
        }
        
        public Oleit.AS.Service.DataObject.FuncMenu[] QueryAllMenu() {
            return base.Channel.QueryAllMenu();
        }
        
        public Oleit.AS.Service.DataObject.FuncMenu[] QueryUserMenu(int userID) {
            return base.Channel.QueryUserMenu(userID);
        }
        
        public Oleit.AS.Service.DataObject.Role[] QueryAllRole() {
            return base.Channel.QueryAllRole();
        }
        
        public System.Data.DataSet QueryRoleMenuRelation() {
            return base.Channel.QueryRoleMenuRelation();
        }
        
        public System.Data.DataSet QueryRoleUserRelation() {
            return base.Channel.QueryRoleUserRelation();
        }
        
        public void Update(Oleit.AS.Service.DataObject.FuncMenu[] menuCollection) {
            base.Channel.Update(menuCollection);
        }
        
        public void DeleteRole(int roleID) {
            base.Channel.DeleteRole(roleID);
        }
        
        public bool SetRoles(Oleit.AS.Service.DataObject.User user, Oleit.AS.Service.DataObject.Role[] roleCollection) {
            return base.Channel.SetRoles(user, roleCollection);
        }
        
        public Oleit.AS.Service.DataObject.User[] QueryRoleUser(int roleID) {
            return base.Channel.QueryRoleUser(roleID);
        }
        
        public Oleit.AS.Service.DataObject.Role[] QueryUserRole(int userID) {
            return base.Channel.QueryUserRole(userID);
        }
        
        public void UpdateRole(Oleit.AS.Service.DataObject.Role role) {
            base.Channel.UpdateRole(role);
        }
        
        public void InsertRole(string roleName) {
            base.Channel.InsertRole(roleName);
        }
        
        public void InsertRoleMenuRelation(int menuID, int roleID) {
            base.Channel.InsertRoleMenuRelation(menuID, roleID);
        }
        
        public void DeleteRoleMenuRelation(int menuID, int roleID) {
            base.Channel.DeleteRoleMenuRelation(menuID, roleID);
        }
        
        public void InsertRoleUserRelation(int menuID, int roleID) {
            base.Channel.InsertRoleUserRelation(menuID, roleID);
        }
        
        public void DeleteRoleUserRelation(int menuID, int roleID) {
            base.Channel.DeleteRoleUserRelation(menuID, roleID);
        }
    }
}

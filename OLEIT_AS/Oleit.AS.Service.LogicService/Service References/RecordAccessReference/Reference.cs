//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Oleit.AS.Service.LogicService.RecordAccessReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RecordAccessReference.IRecordAccess")]
    public interface IRecordAccess {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordAccess/Insert", ReplyAction="http://tempuri.org/IRecordAccess/InsertResponse")]
        int Insert(Oleit.AS.Service.DataObject.Record record, Oleit.AS.Service.DataObject.Journal[] jcollection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordAccess/InsertRecordCollection", ReplyAction="http://tempuri.org/IRecordAccess/InsertRecordCollectionResponse")]
        void InsertRecordCollection(Oleit.AS.Service.DataObject.Record[] recordCollection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordAccess/QueryAll", ReplyAction="http://tempuri.org/IRecordAccess/QueryAllResponse")]
        Oleit.AS.Service.DataObject.Record[] QueryAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordAccess/QueryByrecordID", ReplyAction="http://tempuri.org/IRecordAccess/QueryByrecordIDResponse")]
        Oleit.AS.Service.DataObject.Record[] QueryByrecordID(int recordID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordAccess/QueryBytype", ReplyAction="http://tempuri.org/IRecordAccess/QueryBytypeResponse")]
        Oleit.AS.Service.DataObject.Record[] QueryBytype(Oleit.AS.Service.DataObject.RecordType type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordAccess/QueryByperiod", ReplyAction="http://tempuri.org/IRecordAccess/QueryByperiodResponse")]
        Oleit.AS.Service.DataObject.Record[] QueryByperiod(Oleit.AS.Service.DataObject.Period period);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordAccess/QueryByRecordStatus", ReplyAction="http://tempuri.org/IRecordAccess/QueryByRecordStatusResponse")]
        Oleit.AS.Service.DataObject.Record[] QueryByRecordStatus(Oleit.AS.Service.DataObject.RecordStatus status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordAccess/QueryByapproveUser", ReplyAction="http://tempuri.org/IRecordAccess/QueryByapproveUserResponse")]
        Oleit.AS.Service.DataObject.Record[] QueryByapproveUser(Oleit.AS.Service.DataObject.User approveUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordAccess/QueryJournal", ReplyAction="http://tempuri.org/IRecordAccess/QueryJournalResponse")]
        Oleit.AS.Service.DataObject.Journal[] QueryJournal(int recordID, int sequenceNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordAccess/QueryJournal2", ReplyAction="http://tempuri.org/IRecordAccess/QueryJournal2Response")]
        Oleit.AS.Service.DataObject.Journal[] QueryJournal2(int recordID, string baseCurrency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordAccess/QueryRecordByPeriodEntityID", ReplyAction="http://tempuri.org/IRecordAccess/QueryRecordByPeriodEntityIDResponse")]
        Oleit.AS.Service.DataObject.Record[] QueryRecordByPeriodEntityID(int entityid, int periodid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordAccess/Update", ReplyAction="http://tempuri.org/IRecordAccess/UpdateResponse")]
        void Update(Oleit.AS.Service.DataObject.User user, Oleit.AS.Service.DataObject.Record record, Oleit.AS.Service.DataObject.Journal[] jcollection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordAccess/LoadWinAndLossLog", ReplyAction="http://tempuri.org/IRecordAccess/LoadWinAndLossLogResponse")]
        System.Data.DataSet LoadWinAndLossLog(int peroidID, int entityID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordAccess/InsertDeletionLog", ReplyAction="http://tempuri.org/IRecordAccess/InsertDeletionLogResponse")]
        void InsertDeletionLog(Oleit.AS.Service.DataObject.Journal[] jcollection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordAccess/UpdateJournal", ReplyAction="http://tempuri.org/IRecordAccess/UpdateJournalResponse")]
        void UpdateJournal(Oleit.AS.Service.DataObject.Journal journal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordAccess/UpdateJournalCollection", ReplyAction="http://tempuri.org/IRecordAccess/UpdateJournalCollectionResponse")]
        void UpdateJournalCollection(Oleit.AS.Service.DataObject.Journal[] journalCollection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordAccess/ChangeStatus", ReplyAction="http://tempuri.org/IRecordAccess/ChangeStatusResponse")]
        void ChangeStatus(int recordID, Oleit.AS.Service.DataObject.RecordStatus status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordAccess/QueryRecordID", ReplyAction="http://tempuri.org/IRecordAccess/QueryRecordIDResponse")]
        int QueryRecordID(int entityid, int periodid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecordAccess/GetjournalSum", ReplyAction="http://tempuri.org/IRecordAccess/GetjournalSumResponse")]
        decimal[] GetjournalSum(int periodId, int typeid, int entityid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRecordAccessChannel : Oleit.AS.Service.LogicService.RecordAccessReference.IRecordAccess, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RecordAccessClient : System.ServiceModel.ClientBase<Oleit.AS.Service.LogicService.RecordAccessReference.IRecordAccess>, Oleit.AS.Service.LogicService.RecordAccessReference.IRecordAccess {
        
        public RecordAccessClient() {
        }
        
        public RecordAccessClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RecordAccessClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RecordAccessClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RecordAccessClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Insert(Oleit.AS.Service.DataObject.Record record, Oleit.AS.Service.DataObject.Journal[] jcollection) {
            return base.Channel.Insert(record, jcollection);
        }
        
        public void InsertRecordCollection(Oleit.AS.Service.DataObject.Record[] recordCollection) {
            base.Channel.InsertRecordCollection(recordCollection);
        }
        
        public Oleit.AS.Service.DataObject.Record[] QueryAll() {
            return base.Channel.QueryAll();
        }
        
        public Oleit.AS.Service.DataObject.Record[] QueryByrecordID(int recordID) {
            return base.Channel.QueryByrecordID(recordID);
        }
        
        public Oleit.AS.Service.DataObject.Record[] QueryBytype(Oleit.AS.Service.DataObject.RecordType type) {
            return base.Channel.QueryBytype(type);
        }
        
        public Oleit.AS.Service.DataObject.Record[] QueryByperiod(Oleit.AS.Service.DataObject.Period period) {
            return base.Channel.QueryByperiod(period);
        }
        
        public Oleit.AS.Service.DataObject.Record[] QueryByRecordStatus(Oleit.AS.Service.DataObject.RecordStatus status) {
            return base.Channel.QueryByRecordStatus(status);
        }
        
        public Oleit.AS.Service.DataObject.Record[] QueryByapproveUser(Oleit.AS.Service.DataObject.User approveUser) {
            return base.Channel.QueryByapproveUser(approveUser);
        }
        
        public Oleit.AS.Service.DataObject.Journal[] QueryJournal(int recordID, int sequenceNo) {
            return base.Channel.QueryJournal(recordID, sequenceNo);
        }
        
        public Oleit.AS.Service.DataObject.Journal[] QueryJournal2(int recordID, string baseCurrency) {
            return base.Channel.QueryJournal2(recordID, baseCurrency);
        }
        
        public Oleit.AS.Service.DataObject.Record[] QueryRecordByPeriodEntityID(int entityid, int periodid) {
            return base.Channel.QueryRecordByPeriodEntityID(entityid, periodid);
        }
        
        public void Update(Oleit.AS.Service.DataObject.User user, Oleit.AS.Service.DataObject.Record record, Oleit.AS.Service.DataObject.Journal[] jcollection) {
            base.Channel.Update(user, record, jcollection);
        }
        
        public System.Data.DataSet LoadWinAndLossLog(int peroidID, int entityID) {
            return base.Channel.LoadWinAndLossLog(peroidID, entityID);
        }
        
        public void InsertDeletionLog(Oleit.AS.Service.DataObject.Journal[] jcollection) {
            base.Channel.InsertDeletionLog(jcollection);
        }
        
        public void UpdateJournal(Oleit.AS.Service.DataObject.Journal journal) {
            base.Channel.UpdateJournal(journal);
        }
        
        public void UpdateJournalCollection(Oleit.AS.Service.DataObject.Journal[] journalCollection) {
            base.Channel.UpdateJournalCollection(journalCollection);
        }
        
        public void ChangeStatus(int recordID, Oleit.AS.Service.DataObject.RecordStatus status) {
            base.Channel.ChangeStatus(recordID, status);
        }
        
        public int QueryRecordID(int entityid, int periodid) {
            return base.Channel.QueryRecordID(entityid, periodid);
        }
        
        public decimal[] GetjournalSum(int periodId, int typeid, int entityid) {
            return base.Channel.GetjournalSum(periodId, typeid, entityid);
        }
    }
}

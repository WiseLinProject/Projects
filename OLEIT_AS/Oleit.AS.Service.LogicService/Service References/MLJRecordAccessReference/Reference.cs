//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Oleit.AS.Service.LogicService.MLJRecordAccessReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MLJRecordAccessReference.IMLJRecordAccess")]
    public interface IMLJRecordAccess {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMLJRecordAccess/Insert", ReplyAction="http://tempuri.org/IMLJRecordAccess/InsertResponse")]
        int Insert(Oleit.AS.Service.DataObject.MLJRecord record);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMLJRecordAccess/QueryByRecordID", ReplyAction="http://tempuri.org/IMLJRecordAccess/QueryByRecordIDResponse")]
        Oleit.AS.Service.DataObject.MLJRecord[] QueryByRecordID(int MLJRecordID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMLJRecordAccess/QueryByPeriodIDEntityName", ReplyAction="http://tempuri.org/IMLJRecordAccess/QueryByPeriodIDEntityNameResponse")]
        Oleit.AS.Service.DataObject.MLJJournal[] QueryByPeriodIDEntityName(int PeriodID, string EntityName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMLJRecordAccess/QueryJournalByRecordID", ReplyAction="http://tempuri.org/IMLJRecordAccess/QueryJournalByRecordIDResponse")]
        Oleit.AS.Service.DataObject.MLJJournal[] QueryJournalByRecordID(int MLJRecordID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMLJRecordAccess/UpdateRecord", ReplyAction="http://tempuri.org/IMLJRecordAccess/UpdateRecordResponse")]
        void UpdateRecord(Oleit.AS.Service.DataObject.MLJRecord record);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMLJRecordAccess/UpdateJournal", ReplyAction="http://tempuri.org/IMLJRecordAccess/UpdateJournalResponse")]
        void UpdateJournal(Oleit.AS.Service.DataObject.MLJJournal journal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMLJRecordAccess/UpdateJournalCollection", ReplyAction="http://tempuri.org/IMLJRecordAccess/UpdateJournalCollectionResponse")]
        void UpdateJournalCollection(Oleit.AS.Service.DataObject.MLJJournal[] journalCollection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMLJRecordAccess/ChangeStatus", ReplyAction="http://tempuri.org/IMLJRecordAccess/ChangeStatusResponse")]
        void ChangeStatus(int MLJRecordID, Oleit.AS.Service.DataObject.RecordStatus status, int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMLJRecordAccess/CheckAndAdd", ReplyAction="http://tempuri.org/IMLJRecordAccess/CheckAndAddResponse")]
        void CheckAndAdd(int periodid, int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMLJRecordAccess/QueryStatusColor", ReplyAction="http://tempuri.org/IMLJRecordAccess/QueryStatusColorResponse")]
        Oleit.AS.Service.DataObject.StatusColor[] QueryStatusColor();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMLJRecordAccess/UpdateColor", ReplyAction="http://tempuri.org/IMLJRecordAccess/UpdateColorResponse")]
        void UpdateColor(Oleit.AS.Service.DataObject.StatusColor[] collection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMLJRecordAccess/QueryOneStatusColor", ReplyAction="http://tempuri.org/IMLJRecordAccess/QueryOneStatusColorResponse")]
        Oleit.AS.Service.DataObject.StatusColor[] QueryOneStatusColor(int statusid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMLJRecordAccess/InsertUserRMLJ", ReplyAction="http://tempuri.org/IMLJRecordAccess/InsertUserRMLJResponse")]
        void InsertUserRMLJ(int userid, int entityid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMLJRecordAccess/GetUserMLJEntity", ReplyAction="http://tempuri.org/IMLJRecordAccess/GetUserMLJEntityResponse")]
        System.Data.DataSet GetUserMLJEntity();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMLJRecordAccess/UpdateUserMLJ", ReplyAction="http://tempuri.org/IMLJRecordAccess/UpdateUserMLJResponse")]
        void UpdateUserMLJ(int userid, Oleit.AS.Service.DataObject.Entity[] collection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMLJRecordAccess/IsApprove", ReplyAction="http://tempuri.org/IMLJRecordAccess/IsApproveResponse")]
        bool IsApprove(int PeriodID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMLJRecordAccess/GetAccountStatusLog", ReplyAction="http://tempuri.org/IMLJRecordAccess/GetAccountStatusLogResponse")]
        System.Data.DataSet GetAccountStatusLog(int entityid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMLJRecordAccess/GetMLJLog", ReplyAction="http://tempuri.org/IMLJRecordAccess/GetMLJLogResponse")]
        System.Data.DataSet GetMLJLog(int periodId, string entityName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMLJRecordAccess/GetMLJSum", ReplyAction="http://tempuri.org/IMLJRecordAccess/GetMLJSumResponse")]
        decimal GetMLJSum(int periodId, int entityid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMLJRecordAccessChannel : Oleit.AS.Service.LogicService.MLJRecordAccessReference.IMLJRecordAccess, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MLJRecordAccessClient : System.ServiceModel.ClientBase<Oleit.AS.Service.LogicService.MLJRecordAccessReference.IMLJRecordAccess>, Oleit.AS.Service.LogicService.MLJRecordAccessReference.IMLJRecordAccess {
        
        public MLJRecordAccessClient() {
        }
        
        public MLJRecordAccessClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MLJRecordAccessClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MLJRecordAccessClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MLJRecordAccessClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Insert(Oleit.AS.Service.DataObject.MLJRecord record) {
            return base.Channel.Insert(record);
        }
        
        public Oleit.AS.Service.DataObject.MLJRecord[] QueryByRecordID(int MLJRecordID) {
            return base.Channel.QueryByRecordID(MLJRecordID);
        }
        
        public Oleit.AS.Service.DataObject.MLJJournal[] QueryByPeriodIDEntityName(int PeriodID, string EntityName) {
            return base.Channel.QueryByPeriodIDEntityName(PeriodID, EntityName);
        }
        
        public Oleit.AS.Service.DataObject.MLJJournal[] QueryJournalByRecordID(int MLJRecordID) {
            return base.Channel.QueryJournalByRecordID(MLJRecordID);
        }
        
        public void UpdateRecord(Oleit.AS.Service.DataObject.MLJRecord record) {
            base.Channel.UpdateRecord(record);
        }
        
        public void UpdateJournal(Oleit.AS.Service.DataObject.MLJJournal journal) {
            base.Channel.UpdateJournal(journal);
        }
        
        public void UpdateJournalCollection(Oleit.AS.Service.DataObject.MLJJournal[] journalCollection) {
            base.Channel.UpdateJournalCollection(journalCollection);
        }
        
        public void ChangeStatus(int MLJRecordID, Oleit.AS.Service.DataObject.RecordStatus status, int userID) {
            base.Channel.ChangeStatus(MLJRecordID, status, userID);
        }
        
        public void CheckAndAdd(int periodid, int userid) {
            base.Channel.CheckAndAdd(periodid, userid);
        }
        
        public Oleit.AS.Service.DataObject.StatusColor[] QueryStatusColor() {
            return base.Channel.QueryStatusColor();
        }
        
        public void UpdateColor(Oleit.AS.Service.DataObject.StatusColor[] collection) {
            base.Channel.UpdateColor(collection);
        }
        
        public Oleit.AS.Service.DataObject.StatusColor[] QueryOneStatusColor(int statusid) {
            return base.Channel.QueryOneStatusColor(statusid);
        }
        
        public void InsertUserRMLJ(int userid, int entityid) {
            base.Channel.InsertUserRMLJ(userid, entityid);
        }
        
        public System.Data.DataSet GetUserMLJEntity() {
            return base.Channel.GetUserMLJEntity();
        }
        
        public void UpdateUserMLJ(int userid, Oleit.AS.Service.DataObject.Entity[] collection) {
            base.Channel.UpdateUserMLJ(userid, collection);
        }
        
        public bool IsApprove(int PeriodID) {
            return base.Channel.IsApprove(PeriodID);
        }
        
        public System.Data.DataSet GetAccountStatusLog(int entityid) {
            return base.Channel.GetAccountStatusLog(entityid);
        }
        
        public System.Data.DataSet GetMLJLog(int periodId, string entityName) {
            return base.Channel.GetMLJLog(periodId, entityName);
        }
        
        public decimal GetMLJSum(int periodId, int entityid) {
            return base.Channel.GetMLJSum(periodId, entityid);
        }
    }
}

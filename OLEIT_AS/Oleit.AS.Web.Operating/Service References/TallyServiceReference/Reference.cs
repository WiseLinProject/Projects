//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18047
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Accounting_System.TallyServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TupleOfArrayOfEntityArrayOfWeeklySummaryCgf2UYTj", Namespace="http://schemas.datacontract.org/2004/07/System")]
    [System.SerializableAttribute()]
    public partial class TupleOfArrayOfEntityArrayOfWeeklySummaryCgf2UYTj : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private Oleit.AS.Service.DataObject.Entity[] m_Item1Field;
        
        private Oleit.AS.Service.DataObject.WeeklySummary[] m_Item2Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Oleit.AS.Service.DataObject.Entity[] m_Item1 {
            get {
                return this.m_Item1Field;
            }
            set {
                if ((object.ReferenceEquals(this.m_Item1Field, value) != true)) {
                    this.m_Item1Field = value;
                    this.RaisePropertyChanged("m_Item1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Oleit.AS.Service.DataObject.WeeklySummary[] m_Item2 {
            get {
                return this.m_Item2Field;
            }
            set {
                if ((object.ReferenceEquals(this.m_Item2Field, value) != true)) {
                    this.m_Item2Field = value;
                    this.RaisePropertyChanged("m_Item2");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TallyServiceReference.ITallyService")]
    public interface ITallyService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITallyService/DoWork", ReplyAction="http://tempuri.org/ITallyService/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITallyService/LoadEntity", ReplyAction="http://tempuri.org/ITallyService/LoadEntityResponse")]
        Accounting_System.TallyServiceReference.TupleOfArrayOfEntityArrayOfWeeklySummaryCgf2UYTj LoadEntity(int entityID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITallyService/Confirm", ReplyAction="http://tempuri.org/ITallyService/ConfirmResponse")]
        Oleit.AS.Service.DataObject.WeeklySummary[] Confirm(int confirmUserID, int entityID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITallyService/ExcelConfirm", ReplyAction="http://tempuri.org/ITallyService/ExcelConfirmResponse")]
        Oleit.AS.Service.DataObject.WeeklySummary[] ExcelConfirm(int entityID, Oleit.AS.Service.DataObject.WeeklySummary[] wsc);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITallyServiceChannel : Accounting_System.TallyServiceReference.ITallyService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TallyServiceClient : System.ServiceModel.ClientBase<Accounting_System.TallyServiceReference.ITallyService>, Accounting_System.TallyServiceReference.ITallyService {
        
        public TallyServiceClient() {
        }
        
        public TallyServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TallyServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TallyServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TallyServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public Accounting_System.TallyServiceReference.TupleOfArrayOfEntityArrayOfWeeklySummaryCgf2UYTj LoadEntity(int entityID) {
            return base.Channel.LoadEntity(entityID);
        }
        
        public Oleit.AS.Service.DataObject.WeeklySummary[] Confirm(int confirmUserID, int entityID) {
            return base.Channel.Confirm(confirmUserID, entityID);
        }
        
        public Oleit.AS.Service.DataObject.WeeklySummary[] ExcelConfirm(int entityID, Oleit.AS.Service.DataObject.WeeklySummary[] wsc) {
            return base.Channel.ExcelConfirm(entityID, wsc);
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18047
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Accounting_System.PropertiesServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PropertiesServiceReference.IPropertiesService")]
    public interface IPropertiesService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPropertiesService/Insert", ReplyAction="http://tempuri.org/IPropertiesService/InsertResponse")]
        void Insert(Oleit.AS.Service.DataObject.Property property);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPropertiesService/InsertCollection", ReplyAction="http://tempuri.org/IPropertiesService/InsertCollectionResponse")]
        void InsertCollection(Oleit.AS.Service.DataObject.Property[] propertyCollection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPropertiesService/SetPropertyValue1", ReplyAction="http://tempuri.org/IPropertiesService/SetPropertyValue1Response")]
        void SetPropertyValue1(int propertyID, string propertyValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPropertiesService/SetProperty", ReplyAction="http://tempuri.org/IPropertiesService/SetPropertyResponse")]
        void SetProperty(string propertyKey, Oleit.AS.Service.DataObject.Property perty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPropertiesService/SetPropertyValue2", ReplyAction="http://tempuri.org/IPropertiesService/SetPropertyValue2Response")]
        void SetPropertyValue2(string propertyName, string propertyValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPropertiesService/GetPropertyValue1", ReplyAction="http://tempuri.org/IPropertiesService/GetPropertyValue1Response")]
        Oleit.AS.Service.DataObject.Property[] GetPropertyValue1(int propertyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPropertiesService/GetPropertyValue2", ReplyAction="http://tempuri.org/IPropertiesService/GetPropertyValue2Response")]
        Oleit.AS.Service.DataObject.Property[] GetPropertyValue2(string propertyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPropertiesService/GetProperty", ReplyAction="http://tempuri.org/IPropertiesService/GetPropertyResponse")]
        Oleit.AS.Service.DataObject.Property[] GetProperty(string propertyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPropertiesService/GetAllProperties", ReplyAction="http://tempuri.org/IPropertiesService/GetAllPropertiesResponse")]
        Oleit.AS.Service.DataObject.Property[] GetAllProperties();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPropertiesServiceChannel : Accounting_System.PropertiesServiceReference.IPropertiesService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PropertiesServiceClient : System.ServiceModel.ClientBase<Accounting_System.PropertiesServiceReference.IPropertiesService>, Accounting_System.PropertiesServiceReference.IPropertiesService {
        
        public PropertiesServiceClient() {
        }
        
        public PropertiesServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PropertiesServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PropertiesServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PropertiesServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Insert(Oleit.AS.Service.DataObject.Property property) {
            base.Channel.Insert(property);
        }
        
        public void InsertCollection(Oleit.AS.Service.DataObject.Property[] propertyCollection) {
            base.Channel.InsertCollection(propertyCollection);
        }
        
        public void SetPropertyValue1(int propertyID, string propertyValue) {
            base.Channel.SetPropertyValue1(propertyID, propertyValue);
        }
        
        public void SetProperty(string propertyKey, Oleit.AS.Service.DataObject.Property perty) {
            base.Channel.SetProperty(propertyKey, perty);
        }
        
        public void SetPropertyValue2(string propertyName, string propertyValue) {
            base.Channel.SetPropertyValue2(propertyName, propertyValue);
        }
        
        public Oleit.AS.Service.DataObject.Property[] GetPropertyValue1(int propertyID) {
            return base.Channel.GetPropertyValue1(propertyID);
        }
        
        public Oleit.AS.Service.DataObject.Property[] GetPropertyValue2(string propertyName) {
            return base.Channel.GetPropertyValue2(propertyName);
        }
        
        public Oleit.AS.Service.DataObject.Property[] GetProperty(string propertyName) {
            return base.Channel.GetProperty(propertyName);
        }
        
        public Oleit.AS.Service.DataObject.Property[] GetAllProperties() {
            return base.Channel.GetAllProperties();
        }
    }
}

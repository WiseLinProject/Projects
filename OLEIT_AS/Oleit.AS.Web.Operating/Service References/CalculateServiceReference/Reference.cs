//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18047
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Accounting_System.CalculateServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TupleOfTransferEntityCgf2UYTj", Namespace="http://schemas.datacontract.org/2004/07/System")]
    [System.SerializableAttribute()]
    public partial class TupleOfTransferEntityCgf2UYTj : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private Oleit.AS.Service.DataObject.Transfer m_Item1Field;
        
        private Oleit.AS.Service.DataObject.Entity m_Item2Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Oleit.AS.Service.DataObject.Transfer m_Item1 {
            get {
                return this.m_Item1Field;
            }
            set {
                if ((object.ReferenceEquals(this.m_Item1Field, value) != true)) {
                    this.m_Item1Field = value;
                    this.RaisePropertyChanged("m_Item1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Oleit.AS.Service.DataObject.Entity m_Item2 {
            get {
                return this.m_Item2Field;
            }
            set {
                if ((object.ReferenceEquals(this.m_Item2Field, value) != true)) {
                    this.m_Item2Field = value;
                    this.RaisePropertyChanged("m_Item2");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CalculateServiceReference.ICalculateService")]
    public interface ICalculateService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculateService/AutoJournal", ReplyAction="http://tempuri.org/ICalculateService/AutoJournalResponse")]
        Oleit.AS.Service.DataObject.Journal[] AutoJournal(Oleit.AS.Service.DataObject.Journal[] pAndLEntities);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculateService/GetWeeklySummary", ReplyAction="http://tempuri.org/ICalculateService/GetWeeklySummaryResponse")]
        Oleit.AS.Service.DataObject.WeeklySummary[] GetWeeklySummary(int entityID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculateService/HasWeeklySummary", ReplyAction="http://tempuri.org/ICalculateService/HasWeeklySummaryResponse")]
        System.Collections.Generic.Dictionary<int, bool> HasWeeklySummary(Oleit.AS.Service.DataObject.Entity entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculateService/Subtotal", ReplyAction="http://tempuri.org/ICalculateService/SubtotalResponse")]
        Oleit.AS.Service.DataObject.Transfer Subtotal(int entryUserID, Oleit.AS.Service.DataObject.Entity entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculateService/Transfer", ReplyAction="http://tempuri.org/ICalculateService/TransferResponse")]
        Accounting_System.CalculateServiceReference.TupleOfTransferEntityCgf2UYTj Transfer(int entryUserID, Oleit.AS.Service.DataObject.Entity[] entityCollection, decimal[] baseTransfer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculateService/ExcelTransfer", ReplyAction="http://tempuri.org/ICalculateService/ExcelTransferResponse")]
        Accounting_System.CalculateServiceReference.TupleOfTransferEntityCgf2UYTj ExcelTransfer(Oleit.AS.Service.DataObject.Entity[] entityCollection, decimal[] baseTransfer, Oleit.AS.Service.DataObject.WeeklySummary[] wsc);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICalculateServiceChannel : Accounting_System.CalculateServiceReference.ICalculateService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalculateServiceClient : System.ServiceModel.ClientBase<Accounting_System.CalculateServiceReference.ICalculateService>, Accounting_System.CalculateServiceReference.ICalculateService {
        
        public CalculateServiceClient() {
        }
        
        public CalculateServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CalculateServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculateServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculateServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Oleit.AS.Service.DataObject.Journal[] AutoJournal(Oleit.AS.Service.DataObject.Journal[] pAndLEntities) {
            return base.Channel.AutoJournal(pAndLEntities);
        }
        
        public Oleit.AS.Service.DataObject.WeeklySummary[] GetWeeklySummary(int entityID) {
            return base.Channel.GetWeeklySummary(entityID);
        }
        
        public System.Collections.Generic.Dictionary<int, bool> HasWeeklySummary(Oleit.AS.Service.DataObject.Entity entity) {
            return base.Channel.HasWeeklySummary(entity);
        }
        
        public Oleit.AS.Service.DataObject.Transfer Subtotal(int entryUserID, Oleit.AS.Service.DataObject.Entity entity) {
            return base.Channel.Subtotal(entryUserID, entity);
        }
        
        public Accounting_System.CalculateServiceReference.TupleOfTransferEntityCgf2UYTj Transfer(int entryUserID, Oleit.AS.Service.DataObject.Entity[] entityCollection, decimal[] baseTransfer) {
            return base.Channel.Transfer(entryUserID, entityCollection, baseTransfer);
        }
        
        public Accounting_System.CalculateServiceReference.TupleOfTransferEntityCgf2UYTj ExcelTransfer(Oleit.AS.Service.DataObject.Entity[] entityCollection, decimal[] baseTransfer, Oleit.AS.Service.DataObject.WeeklySummary[] wsc) {
            return base.Channel.ExcelTransfer(entityCollection, baseTransfer, wsc);
        }
    }
}
